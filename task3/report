We are using "only" sklearn and pandas for this task (as well as numpy, math and operator), where we use pandas to handle the loading and handling of the datasets, sklearn for basically all of the ML based processing and numpy, math and operator for the feature engineering.

After reading the task description and taking a look at the training data we decided to encode each amino acid on each position as a value. To this end we split each sequence of letters into their respective positions, i.e. 4 new colomns with each one character. After mapping these amino acids directly to a value we also tried normalizing, but doing it this way did not yield very good results (close to 50% only).
Our second approach instead of as a value was to onehot encode the amino acids. This immideatly gave us decent results even with only an SVC (above baseline). But because not even a gridsearch over different parameters for the SVC placed us high enough on the scoreboard, we then started to try an MLPClassifier. This turned out to work quite well and in the end gave us the current result. We did have an issue with the onehot encoder of sklearn not fully encoding all possible amino acids at each position though, as not all combinations exist in the training dataset. Which after fixing did increase our score by about 1%.
To find out the best parameters for the MLPClassifier we let a grid-search run on euler over a host of paramters, which turns out is a lot more complicated then just letting the same python script run there... Inorder to get constant output of the run and actually catch all of it, we found some code that redirects the stdout to a file. Further we tried using pickle and joblib to load the onehot encoder directly on euler, but this did not work out immideatly, as the versions of sklearn and pandas on euler are just way further behind (at least on the old modules).
